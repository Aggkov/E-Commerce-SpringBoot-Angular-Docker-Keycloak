spring.application.name=API-GATEWAY
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
server.port=8080
eureka.instance.prefer-ip-address=false
eureka.instance.hostname=localhost
eureka.instance.ip-address=127.0.0.1

# JWT Resource Server Configuration
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:9090/realms/E-Commerce/protocol/openid-connect/certs
# OAuth2 Client Configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:9090/realms/E-Commerce
spring.security.oauth2.client.registration.spring-with-test-scope.provider=keycloak
spring.security.oauth2.client.registration.spring-with-test-scope.client-id=frontend
#spring.security.oauth2.client.registration.spring-with-test-scope.client-secret=7kgvOAsFiMACqYvTjLfj5TcauKWV5dap
spring.security.oauth2.client.registration.spring-with-test-scope.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spring-with-test-scope.scope=openid

#spring.cloud.gateway.default-filters=TokenRelay=
## Core Service Route
spring.cloud.gateway.routes[0].id=core-service
spring.cloud.gateway.routes[0].uri=lb://CORE-SERVICE
#when path /api/product route to product service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/core/**
#spring.security.oauth2.resourceserver.jwt.issuer-uri=

logging.level.org.springframework.cloud.gateway=DEBUG
### Payment Service Route
#spring.cloud.gateway.routes[1].id=payment-service
#spring.cloud.gateway.routes[1].uri=lb://payment-service
##when path /api/product route to product service
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/payment

## Discover Server Route
#spring.cloud.gateway.routes[2].id=discovery-server
##only one instance of discovery server (eureka) so cant use lb, use http
#spring.cloud.gateway.routes[2].uri=http://localhost:8761
#spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
#spring.cloud.gateway.routes[2].filters[0]=SetPath=/