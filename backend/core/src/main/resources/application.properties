spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5432/e-commerce
spring.datasource.username=ecommerce_user
spring.datasource.password=ecommerce_user
spring.jpa.hibernate.ddl-auto=update
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9090/realms/E-Commerce
server.servlet.context-path=/api/v1/
springdoc.api-docs.path=/api-docs
application.file.uploads.photos-output-path=./backend/core/uploads/images
## swagger url: http://localhost:8080/api/v1/swagger-ui/index.html

##spring.jpa.show-sql=true
##spring.jpa.properties.hibernate.format_sql=true
##logging.level.org.hibernate.SQL=DEBUG
#
##DDL Auto Configuration: The ddl-auto setting (update, create, create-drop, or none) \
##  determines how Hibernate handles schema updates. Be cautious with create or create-drop in production \
##  as they can lead to data loss.
## or configure flyway and set it to none V1__<name.sql>
#
#
#
#
## (Optional) You can add a file upload path if you plan to use it later
##This tells Spring Boot to serve the files stored in the uploads folder via URLs
## like http://localhost:8080/uploads/books/book-1000.png
#
#
##springdoc.swagger-ui.path=/api/v1/swagger-ui
#
##logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#
#
#
##spring.datasource.initialization-mode=always
##spring.datasource.initialize=true