spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5432/e-commerce
spring.datasource.username=ecommerce_user
spring.datasource.password=ecommerce_user
spring.jpa.hibernate.ddl-auto=none

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baselineOnMigrate=false
spring.flyway.locations=classpath:db/migration  # Flyway's default location for migrations
#flyway migrate script
#flyway -url=jdbc:postgresql://localhost:5432/e-commerce -user=ecommerce_user -password=ecommerce_user -locations=filesystem:D:\E-com\backend\core-service\src\main\resources\sql\migration migrate

server.servlet.context-path=/api/v1/core
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9090/realms/E-Commerce
springdoc.api-docs.path=/api-docs
#application.file.uploads.photos-output-path=./backend/core-service/uploads/images
file.upload-dir=${user.dir}
spring.application.name=CORE-SERVICE
eureka.instance.prefer-ip-address=false
eureka.instance.hostname=localhost
eureka.instance.ip-address=127.0.0.1
# if want to run with multiple instances of core use port=0 OS will assign random port
server.port=8081
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:9090/realms/E-Commerce/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:9090/realms/E-Commerce
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Dev tools
spring.devtools.livereload.port=0
spring.devtools.restart.enabled=true
logging.level.org.springframework.boot.devtools=DEBUG
#spring.devtools.restart.exclude=/spring-cloud-starter-netflix-eureka-server/**, /spring-cloud-starter-netflix-eureka-client/**, /spring-cloud-starter-gateway/**
spring.devtools.restart.poll-interval=1000
spring.devtools.restart.quiet-period=500

## swagger url: http://localhost:8080/api/v1/core/swagger-ui/index.html

##spring.jpa.show-sql=true
##spring.jpa.properties.hibernate.format_sql=true
##logging.level.org.hibernate.SQL=DEBUG
#
##DDL Auto Configuration: The ddl-auto setting (update, create, create-drop, or none) \
##  determines how Hibernate handles schema updates. Be cautious with create or create-drop in production \
##  as they can lead to data loss.
## or configure flyway and set it to none V1__<name.sql>
#
#
#
#
## (Optional) You can add a file upload path if you plan to use it later
##This tells Spring Boot to serve the files stored in the uploads folder via URLs
## like http://localhost:8080/uploads/books/book-1000.png
#
#
##springdoc.swagger-ui.path=/api/v1/swagger-ui
#
##logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#
#
#
##spring.datasource.initialization-mode=always
##spring.datasource.initialize=true